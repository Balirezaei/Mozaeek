// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MozaeekCore.Persistense.EF;

namespace MozaeekCore.Persistense.EF.Migrations
{
    [DbContext(typeof(CoreDomainContext))]
    [Migration("20210220171250_announcement")]
    partial class announcement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MozaeekCore.Domain.Announcement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestTargetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestTargetId");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("MozaeekCore.Domain.AnnouncementPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AnnouncementId")
                        .HasColumnType("bigint");

                    b.Property<long>("PointId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.HasIndex("PointId");

                    b.ToTable("AnnouncementPoint");
                });

            modelBuilder.Entity("MozaeekCore.Domain.ExecutiveTechs.ExecutiveTechnician", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExecutiveTechnicians");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Label", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Point", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RSS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntervalDataReceiveHours")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("RSS");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestActId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RequestExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestStartDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestTargetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestActId");

                    b.HasIndex("RequestTargetId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestAct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("RequestAct");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestOrg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("RequestOrg");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTarget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("RequestTarget");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetLabel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("LabelId")
                        .HasColumnType("bigint");

                    b.Property<long>("RequestTargetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.HasIndex("RequestTargetId");

                    b.ToTable("RequestTargetLabel");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetRequestOrg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RequestOrgId")
                        .HasColumnType("bigint");

                    b.Property<long>("RequestTargetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestOrgId");

                    b.HasIndex("RequestTargetId");

                    b.ToTable("RequestTargetRequestOrg");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RequestTargetId")
                        .HasColumnType("bigint");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestTargetId");

                    b.HasIndex("SubjectId");

                    b.ToTable("RequestTargetSubject");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("MozaeekCore.Domain.UnProcessedRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Summery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnProcessedRequests");
                });

            modelBuilder.Entity("MozaeekCore.ViewModel.RSSNews", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RSSId")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RssNewses");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Announcement", b =>
                {
                    b.HasOne("MozaeekCore.Domain.RequestTarget", "RequestTarget")
                        .WithMany("Announcements")
                        .HasForeignKey("RequestTargetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekCore.Domain.AnnouncementPoint", b =>
                {
                    b.HasOne("MozaeekCore.Domain.Announcement", "Announcement")
                        .WithMany("AnnouncementPoints")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MozaeekCore.Domain.Point", "Point")
                        .WithMany("AnnouncementPoints")
                        .HasForeignKey("PointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekCore.Domain.Label", b =>
                {
                    b.HasOne("MozaeekCore.Domain.Label", "Parent")
                        .WithMany("SubLabels")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Point", b =>
                {
                    b.HasOne("MozaeekCore.Domain.Point", "Parent")
                        .WithMany("SubPoints")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("MozaeekCore.Domain.Request", b =>
                {
                    b.HasOne("MozaeekCore.Domain.RequestAct", "RequestAct")
                        .WithMany("Requests")
                        .HasForeignKey("RequestActId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MozaeekCore.Domain.RequestTarget", "RequestTarget")
                        .WithMany("Requests")
                        .HasForeignKey("RequestTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("MozaeekCore.Domain.RequestAction", "RequestActions", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("RequestId", "Id");

                            b1.ToTable("RequestAction");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsMany("MozaeekCore.Domain.RequestDocument", "RequestDocuments", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("RequestId", "Id");

                            b1.ToTable("RequestDocument");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsMany("MozaeekCore.Domain.RequestNessesity", "RequestNessesities", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("RequestId", "Id");

                            b1.ToTable("RequestNessesity");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });

                    b.OwnsMany("MozaeekCore.Domain.RequestQualification", "RequestQualifications", b1 =>
                        {
                            b1.Property<long>("RequestId")
                                .HasColumnType("bigint");

                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("RequestId", "Id");

                            b1.ToTable("RequestQualification");

                            b1.WithOwner()
                                .HasForeignKey("RequestId");
                        });
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestOrg", b =>
                {
                    b.HasOne("MozaeekCore.Domain.RequestOrg", "Parent")
                        .WithMany("SubRequestOrgs")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetLabel", b =>
                {
                    b.HasOne("MozaeekCore.Domain.Label", "Label")
                        .WithMany("RequestTargetLabels")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MozaeekCore.Domain.RequestTarget", "RequestTarget")
                        .WithMany("RequestTargetLabels")
                        .HasForeignKey("RequestTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetRequestOrg", b =>
                {
                    b.HasOne("MozaeekCore.Domain.RequestOrg", "RequestOrg")
                        .WithMany("RequestTargetRequestOrgs")
                        .HasForeignKey("RequestOrgId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MozaeekCore.Domain.RequestTarget", "RequestTarget")
                        .WithMany("RequestTargetRequestOrgs")
                        .HasForeignKey("RequestTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekCore.Domain.RequestTargetSubject", b =>
                {
                    b.HasOne("MozaeekCore.Domain.RequestTarget", "RequestTarget")
                        .WithMany("RequestTargetSubjects")
                        .HasForeignKey("RequestTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MozaeekCore.Domain.Subject", "Subject")
                        .WithMany("RequestTargetSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekCore.Domain.Subject", b =>
                {
                    b.HasOne("MozaeekCore.Domain.Subject", "Parent")
                        .WithMany("SubSubjects")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
