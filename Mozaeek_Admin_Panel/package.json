{
  "name": "karmizban-admin",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@ant-design/icons": "^4.6.4",
    "@craco/craco": "^6.2.0",
    "@fortawesome/fontawesome-free": "^5.15.4",
    "@reduxjs/toolkit": "^1.6.1",
    "@tanem/svg-injector": "^10.1.3",
    "antd": "^4.16.13",
    "axios": "^0.21.1",
    "axios-auth-refresh": "^3.1.0",
    "axios-mock-adapter": "^1.20.0",
    "bootstrap": "4.5.2",
    "clsx": "^1.1.1",
    "craco-less": "^1.20.0",
    "cuid": "^2.1.8",
    "generate-password": "^1.6.1",
    "i18next": "^20.4.0",
    "immer": "^9.0.5",
    "jwt-decode": "^3.1.2",
    "lodash": "^4.17.21",
    "moment-jalaali": "^0.9.2",
    "object-path": "^0.11.7",
    "perfect-scrollbar": "^1.5.2",
    "prop-types": "^15.7.2",
    "query-string": "^7.0.1",
    "react": "^17.0.2",
    "react-bootstrap": "1.5.2",
    "react-dom": "^17.0.2",
    "react-i18next": "^11.11.4",
    "react-idle-timer": "^4.6.4",
    "react-inlinesvg": "^2.3.0",
    "react-multi-date-picker": "^3.1.2",
    "react-perfect-scrollbar": "^1.5.8",
    "react-portal": "^4.2.1",
    "react-redux": "^7.2.4",
    "react-router-dom": "^5.2.1",
    "react-scripts": "4.0.3",
    "redux-saga": "^1.1.3",
    "sass": "^1.38.2",
    "socicon": "^3.0.5",
    "use-immer": "^0.6.0",
    "uuid": "^8.3.2",
    "yup": "^0.32.9"
  },
  "devDependencies": {
    "@types/history": "^4.7.9",
    "@types/lodash": "^4.14.172",
    "@types/moment-jalaali": "^0.7.5",
    "@types/node": "^16.7.6",
    "@types/react": "^17.0.19",
    "@types/react-dom": "^17.0.9",
    "@types/react-redux": "^7.1.18",
    "@types/react-router-dom": "^5.1.8",
    "@types/yup": "^0.29.13",
    "env-cmd": "^10.1.0",
    "husky": "^4.3.8",
    "import-sort-style-module": "^6.0.0",
    "lint-staged": "^10.5.4",
    "npm-check-updates": "^11.8.3",
    "prettier": "^2.3.2",
    "prettier-plugin-import-sort": "^0.0.7",
    "source-map-explorer": "^2.5.2",
    "typescript": "~4.4.2"
  },
  "scripts": {
    "analyze": "source-map-explorer 'build/static/js/*.js'",
    "start": "npx env-cmd -e development craco start",
    "build": "npx env-cmd -e production craco build",
    "build:staging": "npx env-cmd -e staging craco build",
    "build:local": "npx env-cmd -e local craco build",
    "check-update": "ncu",
    "prettier": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "prettier:docs": "prettier --write \"docs/**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "test": "craco test",
    "eject": "react-scripts eject",
    "circular": "dpdm src/index.tsx --exclude /node_modules/ --o temp/circular.json",
    "lint": "eslint src/**/*.js --no-error-on-unmatched-pattern",
    "lint-fix": "eslint src/**/*.js --fix --no-error-on-unmatched-pattern",
    "lint-ts": "eslint src/**/*.ts --no-error-on-unmatched-pattern",
    "lint-ts-fix": "eslint src/**/*.ts --fix --no-error-on-unmatched-pattern",
    "typescript": "tsc"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json,css,md}": [
      "prettier --write"
    ]
  },
  "eslintConfig": {
    "extends": "react-app",
    "rules": {
      "react/jsx-boolean-value": "error",
      "react/boolean-prop-naming": [
        "error",
        {
          "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+"
        }
      ],
      "jsx-a11y/aria-role": [
        "error",
        {
          "ignoreNonDOM": true
        }
      ],
      "react/jsx-fragments": "error",
      "react/no-string-refs": [
        "error",
        {
          "noTemplateLiterals": true
        }
      ],
      "react/jsx-wrap-multilines": [
        "error",
        {
          "declaration": "parens-new-line",
          "assignment": "parens-new-line",
          "return": "parens-new-line",
          "arrow": "parens-new-line",
          "condition": "parens-new-line",
          "logical": "parens-new-line",
          "prop": "ignore"
        }
      ],
      "react/self-closing-comp": [
        "warn",
        {
          "component": true,
          "html": false
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "**/*.ts?(x)"
        ],
        "rules": {}
      }
    ]
  },
  "importSort": {
    ".js, .jsx, .ts, .tsx": {
      "style": "module"
    },
    "parser": "typescript"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
