// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MozaeekTechnicianProfile.Persistense.EF;

namespace MozaeekTechnicianProfile.Persistense.EF.Migrations
{
    [DbContext(typeof(MozaeekTechnicianProfileContext))]
    [Migration("20210816165014_addinintroducerCode")]
    partial class addinintroducerCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.OtpCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OtpCodes");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.Technician", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastAbsencePresenceState")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PointId")
                        .HasColumnType("bigint");

                    b.Property<int>("TechnicianType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Technician");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianAbsencePresenceStateHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TechnicianAbsencePresenceState")
                        .HasColumnType("int");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianAbsencePresenceStateHistory");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianAttachement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CoreFileId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianAttachement");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianDefiniteRequestOrg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RequestOrgId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestOrgTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianDefiniteRequestOrg");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<short>("DiscountPercent")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("TechnicianId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianDiscount");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianOflineRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianOflineRequest");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianSubject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TechnicianId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianId");

                    b.ToTable("TechnicianSubject");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.UserQuestionWaitingForTechnician", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerType")
                        .HasColumnType("int");

                    b.Property<int>("PriceCurrencyType")
                        .HasColumnType("int");

                    b.Property<string>("QuestionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionTextDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<long?>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubjectTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemPriceShare")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianPriceShare")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianType")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<string>("UserDeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserQuestionState")
                        .HasColumnType("int");

                    b.Property<long?>("VoiceFileId")
                        .HasColumnType("bigint");

                    b.Property<string>("VoiceHttpPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserQuestionWaitingForTechnicians");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianAbsencePresenceStateHistory", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", null)
                        .WithMany("TechnicianAbsencePresenceStateHistories")
                        .HasForeignKey("TechnicianId");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianAttachement", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", null)
                        .WithMany("TechnicianAttachements")
                        .HasForeignKey("TechnicianId");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianDefiniteRequestOrg", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", null)
                        .WithMany("TechnicianDefiniteRequestOrgs")
                        .HasForeignKey("TechnicianId");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianDiscount", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", "Technician")
                        .WithMany("UserDiscounts")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianOflineRequest", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", null)
                        .WithMany("TechnicianOflineRequests")
                        .HasForeignKey("TechnicianId");
                });

            modelBuilder.Entity("MozaeekTechnicianProfile.Domain.TechnicianSubject", b =>
                {
                    b.HasOne("MozaeekTechnicianProfile.Domain.Technician", null)
                        .WithMany("TechnicianSubjects")
                        .HasForeignKey("TechnicianId");
                });
#pragma warning restore 612, 618
        }
    }
}
