// <auto-generated />
using System;
using Karmizban.Support.EF.ContextContainer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Karmizban.Support.EF.Migrations
{
    [DbContext(typeof(SupportContext))]
    partial class SupportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Karmizban.Support.Domain.TechnicianRequestSupport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TechnicianSuggestedSupportId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.HasKey("Id");

                    b.HasIndex("TechnicianSuggestedSupportId");

                    b.ToTable("TechnicianRequestSupport");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.TechnicianRequestSupportAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerDescription")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("TechnicianRequestSupportId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TechnicianRequestSupportId");

                    b.ToTable("TechnicianRequestSupportAnswer");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.TechnicianSuggestedSupport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.HasKey("Id");

                    b.ToTable("TechnicianSuggestedSupport");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.UserRequestSupport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<string>("QuestionCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<long?>("UserSuggestedSupportId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserSuggestedSupportId");

                    b.ToTable("UserRequestSupport");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.UserRequestSupportAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerDescription")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserRequestSupportId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserRequestSupportId")
                        .IsUnique();

                    b.ToTable("UserRequestSupportAnswer");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.UserSuggestedSupport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.HasKey("Id");

                    b.ToTable("UserSuggestedSupport");
                });

            modelBuilder.Entity("Karmizban.Support.Domain.TechnicianRequestSupport", b =>
                {
                    b.HasOne("Karmizban.Support.Domain.TechnicianSuggestedSupport", "TechnicianSuggestedSupport")
                        .WithMany("TechnicianRequestSupports")
                        .HasForeignKey("TechnicianSuggestedSupportId");

                    b.OwnsOne("Karmizban.Support.Domain.Technician", "Technician", b1 =>
                        {
                            b1.Property<long>("TechnicianRequestSupportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("TechnicianFullName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("TechnicianId")
                                .HasColumnType("bigint");

                            b1.HasKey("TechnicianRequestSupportId");

                            b1.ToTable("TechnicianRequestSupport");

                            b1.WithOwner()
                                .HasForeignKey("TechnicianRequestSupportId");
                        });
                });

            modelBuilder.Entity("Karmizban.Support.Domain.TechnicianRequestSupportAnswer", b =>
                {
                    b.HasOne("Karmizban.Support.Domain.TechnicianRequestSupport", "TechnicianRequestSupport")
                        .WithMany("TechnicianRequestSupportAnswers")
                        .HasForeignKey("TechnicianRequestSupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Karmizban.Support.Domain.UserRequestSupport", b =>
                {
                    b.HasOne("Karmizban.Support.Domain.UserSuggestedSupport", "UserSuggestedSupport")
                        .WithMany("UserRequestSupports")
                        .HasForeignKey("UserSuggestedSupportId");

                    b.OwnsOne("Karmizban.Support.Domain.User", "User", b1 =>
                        {
                            b1.Property<long>("UserRequestSupportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("UserFullName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("UserId")
                                .HasColumnType("bigint");

                            b1.HasKey("UserRequestSupportId");

                            b1.ToTable("UserRequestSupport");

                            b1.WithOwner()
                                .HasForeignKey("UserRequestSupportId");
                        });
                });

            modelBuilder.Entity("Karmizban.Support.Domain.UserRequestSupportAnswer", b =>
                {
                    b.HasOne("Karmizban.Support.Domain.UserRequestSupport", "UserRequestSupport")
                        .WithOne("UserRequestSupportAnswer")
                        .HasForeignKey("Karmizban.Support.Domain.UserRequestSupportAnswer", "UserRequestSupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
